using System;
using System.Runtime.InteropServices;

// ‭‭‎‎‫‍⁪‎‪‎‎‫⁭‬‬‮‭‬‮⁫‮​‭‎⁪‍‌‮⁮‪‌‏‮⁭⁯⁮‮‍‍⁮‮
internal struct u202d‭‎‎‫‍⁪‎‪‎‎‫⁭‬‬‮‭‬‮⁫‮​‭‎⁪‍‌‮⁮‪‌‏‮⁭⁯⁮‮‍‍⁮‮
{
	// ⁫‬⁭​‮‭‌⁫‬⁫‌⁮‭⁯‮⁭⁮‎⁮‪‪‎⁯​​‎‪‬⁫‫‏⁬​‬‍⁮⁬⁮‬⁯‮
	private uint u206b‬⁭​‮‭‌⁫‬⁫‌⁮‭⁯‮⁭⁮‎⁮‪‪‎⁯​​‎‪‬⁫‫‏⁬​‬‍⁮⁬⁮‬⁯‮;

	// ‍⁫⁬‪⁬‫⁪⁮‪‌​⁫‍‌⁭‬⁮‭‍⁭⁭⁯‭⁬‍⁮‎⁯​⁯‮⁫‫​⁫‮‫‎‮‮
	private ushort u200d⁫⁬‪⁬‫⁪⁮‪‌​⁫‍‌⁭‬⁮‭‍⁭⁭⁯‭⁬‍⁮‎⁯​⁯‮⁫‫​⁫‮‫‎‮‮;

	// ‮‫‍‫⁯⁬‭⁬⁬⁮‮⁭‭‏‌​‌‮⁮‌​⁮⁪⁬⁯‬‌⁬⁯​‮‪‫⁭‏‮​⁬‬‏‮
	private ushort u202e‫‍‫⁯⁬‭⁬⁬⁮‮⁭‭‏‌​‌‮⁮‌​⁮⁪⁬⁯‬‌⁬⁯​‮‪‫⁭‏‮​⁬‬‏‮;

	// ⁬‮‌⁫‬⁮⁪‭‎‍‎⁪⁬‍‬⁭‫⁭‪⁪‎‫⁯⁬⁮​‫‎‫⁬‎‍⁯‮‬‍‭‏‎‫‮
	private int u206c‮‌⁫‬⁮⁪‭‎‍‎⁪⁬‍‬⁭‫⁭‪⁪‎‫⁯⁬⁮​‫‎‫⁬‎‍⁯‮‬‍‭‏‎‫‮;

	// ‬⁭⁫⁪‮⁭⁭‪⁪⁫‏⁭‬‎‏‌⁬‫‎⁬‮‮‭‮⁪⁮​‪​‬‭‌⁭⁪⁭‎‭‭‍⁬‮
	private uint u202c⁭⁫⁪‮⁭⁭‪⁪⁫‏⁭‬‎‏‌⁬‫‎⁬‮‮‭‮⁪⁮​‪​‬‭‌⁭⁪⁭‎‭‭‍⁬‮;

	// ‎‬⁪‮‫‭⁫‪⁭‫‍⁬‭‭⁭⁮‬⁯⁮‎‪‪⁬‬‭‫⁫⁭⁯‍⁫⁯⁫​⁪‮⁮‎‌‏‮
	private uint u200e‬⁪‮‫‭⁫‪⁭‫‍⁬‭‭⁭⁮‬⁯⁮‎‪‪⁬‬‭‫⁫⁭⁯‍⁫⁯⁫​⁪‮⁮‎‌‏‮;

	// ‌⁫⁬‏‏⁮‬⁪⁬‮⁬⁬⁪‭⁫‎⁬‫‏‎‪‬​‍‭⁪‎⁫⁭‏‏⁮⁭⁪‮⁫⁪‎⁪‏‮
	private uint u200c⁫⁬‏‏⁮‬⁪⁬‮⁬⁬⁪‭⁫‎⁬‫‏‎‪‬​‍‭⁪‎⁫⁭‏‏⁮⁭⁪‮⁫⁪‎⁪‏‮;

	// ‭‬⁯‌⁯‍‏‪⁮‏‍⁬‍‏⁭‍⁫‭‍‫‍‫⁮⁬‍​⁪‬‫‪‍‪⁯⁮⁮‮⁯‌‭‪‮
	public byte[] u202d‬⁯‌⁯‍‏‪⁮‏‍⁬‍‏⁭‍⁫‭‍‫‍‫⁮⁬‍​⁪‬‫‪‍‪⁯⁮⁮‮⁯‌‭‪‮()
	{
		byte[] numArray = new byte[Marshal.SizeOf<u202d‭‎‎‫‍⁪‎‪‎‎‫⁭‬‬‮‭‬‮⁫‮​‭‎⁪‍‌‮⁮‪‌‏‮⁭⁯⁮‮‍‍⁮‮>(this)];
		GCHandle gCHandle = GCHandle.Alloc(numArray, GCHandleType.Pinned);
		Marshal.StructureToPtr<u202d‭‎‎‫‍⁪‎‪‎‎‫⁭‬‬‮‭‬‮⁫‮​‭‎⁪‍‌‮⁮‪‌‏‮⁭⁯⁮‮‍‍⁮‮>(this, gCHandle.AddrOfPinnedObject(), false);
		gCHandle.Free();
		return numArray;
	}

	public u202d‭‎‎‫‍⁪‎‪‎‎‫⁭‬‬‮‭‬‮⁫‮​‭‎⁪‍‌‮⁮‪‌‏‮⁭⁯⁮‮‍‍⁮‮(uint num, uint num)
	{
		this.u206b‬⁭​‮‭‌⁫‬⁫‌⁮‭⁯‮⁭⁮‎⁮‪‪‎⁯​​‎‪‬⁫‫‏⁬​‬‍⁮⁬⁮‬⁯‮ = -1582119980;
		this.u200d⁫⁬‪⁬‫⁪⁮‪‌​⁫‍‌⁭‬⁮‭‍⁭⁭⁯‭⁬‍⁮‎⁯​⁯‮⁫‫​⁫‮‫‎‮‮ = 2;
		this.u202e‫‍‫⁯⁬‭⁬⁬⁮‮⁭‭‏‌​‌‮⁮‌​⁮⁪⁬⁯‬‌⁬⁯​‮‪‫⁭‏‮​⁬‬‏‮ = 4;
		this.u206c‮‌⁫‬⁮⁪‭‎‍‎⁪⁬‍‬⁭‫⁭‪⁪‎‫⁯⁬⁮​‫‎‫⁬‎‍⁯‮‬‍‭‏‎‫‮ = 0;
		this.u202c⁭⁫⁪‮⁭⁭‪⁪⁫‏⁭‬‎‏‌⁬‫‎⁬‮‮‭‮⁪⁮​‪​‬‭‌⁭⁪⁭‎‭‭‍⁬‮ = 0;
		this.u200e‬⁪‮‫‭⁫‪⁭‫‍⁬‭‭⁭⁮‬⁯⁮‎‪‪⁬‬‭‫⁫⁭⁯‍⁫⁯⁫​⁪‮⁮‎‌‏‮ = num;
		this.u200c⁫⁬‏‏⁮‬⁪⁬‮⁬⁬⁪‭⁫‎⁬‫‏‎‪‬​‍‭⁪‎⁫⁭‏‏⁮⁭⁪‮⁫⁪‎⁪‏‮ = num;
	}
}